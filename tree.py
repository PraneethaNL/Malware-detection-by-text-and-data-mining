from sklearn import datasets
import numpy as np
from sklearn import tree
from sklearn.metrics import confusion_matrix
#from csv import reader
import csv
from sklearn import  metrics, preprocessing
from sklearn.cross_validation import StratifiedKFold
with open('features_4.csv', 'rb') as f:  
    dataset = np.array(list(csv.reader(f)), dtype=np.float64)

split_at = int(round(len(dataset) * 0.8))

X_train = dataset[:split_at,:-1]
y_train = dataset[:split_at,-1]
X_test = dataset[split_at:,:-1]
y_test = dataset[split_at:,-1]




scaler = preprocessing.StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

cv = StratifiedKFold(y_train, n_folds=10)
clf=tree.DecisionTreeClassifier()
#clf= GridSearchCV(svm.SVC(), param_grid=parameters, cv=cv)
clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)

print(metrics.confusion_matrix(y_test, y_pred))
print(np.sum(y_pred == y_test) / float(len(y_pred)))

